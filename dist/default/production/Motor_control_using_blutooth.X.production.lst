

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Feb 24 21:20:00 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     001A                     _RCREG	set	26
   166     0019                     _TXREG	set	25
   167     0018                     _RCSTA	set	24
   168     0064                     _TXIF	set	100
   169     0065                     _RCIF	set	101
   170     0043                     _RD3	set	67
   171     0042                     _RD2	set	66
   172     0041                     _RD1	set	65
   173     0040                     _RD0	set	64
   174     0099                     _SPBRG	set	153
   175     0098                     _TXSTA	set	152
   176     0088                     _TRISD	set	136
   177     043F                     _TRISC7	set	1087
   178     043E                     _TRISC6	set	1086
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2F8C   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_init_UART:
   195     0070                     ??_init_UART:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_rx:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_rx:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_tx:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_tx:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     tx@a:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	1
   219     0071                     ??_main:
   220     0071                     main@get:	
   221                           ; 1 bytes @ 0x1
   222                           
   223                           
   224                           ; 1 bytes @ 0x1
   225     0071                     	ds	1
   226                           
   227                           	psect	maintext
   228     078C                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 25 in file "motor1.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  get             1    1[COMMON] unsigned char 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         1       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         1       0       0       0       0
   252 ;;Total ram usage:        1 bytes
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		_init_UART
   256 ;;		_rx
   257 ;;		_tx
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263     078C                     _main:	
   264                           ;psect for function _main
   265                           
   266     078C                     l623:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269                           
   270                           
   271                           ;motor1.c: 27:                 RD0 = 1;
   272     078C  1683               	bsf	3,5	;RP0=1, select bank1
   273     078D  1303               	bcf	3,6	;RP1=0, select bank1
   274     078E  1787               	bsf	7,7	;volatile
   275     078F  1B87               	btfsc	7,7	;volatile
   276     0790  2F92               	goto	u31
   277     0791  2F96               	goto	u30
   278     0792                     u31:
   279     0792  1683               	bsf	3,5	;RP0=1, select bank1
   280     0793  1303               	bcf	3,6	;RP1=0, select bank1
   281     0794  1707               	bsf	7,6	;volatile
   282     0795  2F99               	goto	u44
   283     0796                     u30:
   284     0796  1683               	bsf	3,5	;RP0=1, select bank1
   285     0797  1303               	bcf	3,6	;RP1=0, select bank1
   286     0798  1307               	bcf	7,6	;volatile
   287     0799                     u44:
   288     0799                     l625:
   289                           
   290                           ;motor1.c: 28:                 RD2 = 1;
   291     0799  0188               	clrf	8	;volatile
   292     079A                     l627:
   293                           
   294                           ;motor1.c: 29:                 RD1 = 0;
   295     079A  1283               	bcf	3,5	;RP0=0, select bank0
   296     079B  1303               	bcf	3,6	;RP1=0, select bank0
   297     079C  1188               	bcf	8,3	;volatile
   298     079D  1108               	bcf	8,2	;volatile
   299     079E  1088               	bcf	8,1	;volatile
   300     079F  1008               	bcf	8,0	;volatile
   301     07A0                     l629:
   302                           
   303                           ;motor1.c: 32: 
   304     07A0  120A  118A  277B  120A  118A  	fcall	_init_UART
   305     07A5                     l631:
   306                           
   307                           ;motor1.c: 35:                 RD0 = 0;
   308     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   309     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   310     07A7  1E8C               	btfss	12,5	;volatile
   311     07A8  2FAA               	goto	u51
   312     07A9  2FAB               	goto	u50
   313     07AA                     u51:
   314     07AA  2FA5               	goto	l631
   315     07AB                     u50:
   316     07AB                     l633:
   317                           
   318                           ;motor1.c: 36:                 RD2 = 0;
   319     07AB  120A  118A  2767  120A  118A  	fcall	_rx
   320     07B0  00F1               	movwf	main@get
   321     07B1                     l635:
   322                           
   323                           ;motor1.c: 37:             } else if (get == 'W') {
   324     07B1  0871               	movf	main@get,w
   325     07B2  120A  118A  2770  120A  118A  	fcall	_tx
   326     07B7                     l637:
   327                           
   328                           ;motor1.c: 39:                 RD0 = 1;
   329     07B7  3046               	movlw	70
   330     07B8  0671               	xorwf	main@get,w
   331     07B9  1D03               	btfss	3,2
   332     07BA  2FBC               	goto	u61
   333     07BB  2FBD               	goto	u60
   334     07BC                     u61:
   335     07BC  2FC4               	goto	l641
   336     07BD                     u60:
   337     07BD                     l639:
   338                           
   339                           ;motor1.c: 41:                 RD2 = 0;
   340     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   341     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   342     07BF  1408               	bsf	8,0	;volatile
   343                           
   344                           ;motor1.c: 42:                 RD3 = 0;
   345     07C0  1508               	bsf	8,2	;volatile
   346                           
   347                           ;motor1.c: 43:             } else if (get == 'L') {
   348     07C1  1088               	bcf	8,1	;volatile
   349                           
   350                           ;motor1.c: 44: 
   351     07C2  1188               	bcf	8,3	;volatile
   352                           
   353                           ;motor1.c: 45:                 RD2 = 1;
   354     07C3  2FA5               	goto	l631
   355     07C4                     l641:
   356     07C4  3052               	movlw	82
   357     07C5  0671               	xorwf	main@get,w
   358     07C6  1D03               	btfss	3,2
   359     07C7  2FC9               	goto	u71
   360     07C8  2FCA               	goto	u70
   361     07C9                     u71:
   362     07C9  2FD1               	goto	l645
   363     07CA                     u70:
   364     07CA                     l643:
   365                           
   366                           ;motor1.c: 47:                 RD0 = 0;
   367     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   368     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   369     07CC  1488               	bsf	8,1	;volatile
   370                           
   371                           ;motor1.c: 48:                 RD3 = 0;
   372     07CD  1588               	bsf	8,3	;volatile
   373                           
   374                           ;motor1.c: 49:             } else if (get == 'S') {
   375     07CE  1008               	bcf	8,0	;volatile
   376                           
   377                           ;motor1.c: 50: 
   378     07CF  1108               	bcf	8,2	;volatile
   379                           
   380                           ;motor1.c: 51:                 RD0 = RD1 = RD2 = RD3 = 0;
   381     07D0  2FA5               	goto	l631
   382     07D1                     l645:
   383     07D1  3057               	movlw	87
   384     07D2  0671               	xorwf	main@get,w
   385     07D3  1D03               	btfss	3,2
   386     07D4  2FD6               	goto	u81
   387     07D5  2FD7               	goto	u80
   388     07D6                     u81:
   389     07D6  2FDE               	goto	l649
   390     07D7                     u80:
   391     07D7                     l647:
   392                           
   393                           ;motor1.c: 53:         }
   394     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   395     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   396     07D9  1408               	bsf	8,0	;volatile
   397                           
   398                           ;motor1.c: 54: 
   399     07DA  1088               	bcf	8,1	;volatile
   400                           
   401                           ;motor1.c: 55:     }
   402     07DB  1108               	bcf	8,2	;volatile
   403                           
   404                           ;motor1.c: 56: }
   405     07DC  1188               	bcf	8,3	;volatile
   406                           
   407                           ;motor1.c: 57: 
   408     07DD  2FA5               	goto	l631
   409     07DE                     l649:
   410     07DE  304C               	movlw	76
   411     07DF  0671               	xorwf	main@get,w
   412     07E0  1D03               	btfss	3,2
   413     07E1  2FE3               	goto	u91
   414     07E2  2FE4               	goto	u90
   415     07E3                     u91:
   416     07E3  2FEB               	goto	l653
   417     07E4                     u90:
   418     07E4                     l651:
   419                           
   420                           ;motor1.c: 59: {
   421     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   422     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   423     07E6  1508               	bsf	8,2	;volatile
   424                           
   425                           ;motor1.c: 60:     TXSTA = 0x24;
   426     07E7  1088               	bcf	8,1	;volatile
   427                           
   428                           ;motor1.c: 61:     RCSTA = 0b10010000;
   429     07E8  1008               	bcf	8,0	;volatile
   430                           
   431                           ;motor1.c: 62:     SPBRG = 129;
   432     07E9  1188               	bcf	8,3	;volatile
   433                           
   434                           ;motor1.c: 63:     TXIF = RCIF = 0;
   435     07EA  2FA5               	goto	l631
   436     07EB                     l653:
   437     07EB  3053               	movlw	83
   438     07EC  0671               	xorwf	main@get,w
   439     07ED  1D03               	btfss	3,2
   440     07EE  2FF0               	goto	u101
   441     07EF  2FF1               	goto	u100
   442     07F0                     u101:
   443     07F0  2FF8               	goto	l44
   444     07F1                     u100:
   445     07F1                     l655:
   446                           
   447                           ;motor1.c: 65: 
   448     07F1  1283               	bcf	3,5	;RP0=0, select bank0
   449     07F2  1303               	bcf	3,6	;RP1=0, select bank0
   450     07F3  1188               	bcf	8,3	;volatile
   451     07F4  1108               	bcf	8,2	;volatile
   452     07F5  1088               	bcf	8,1	;volatile
   453     07F6  1008               	bcf	8,0	;volatile
   454     07F7  2FA5               	goto	l631
   455     07F8                     l44:
   456     07F8  2FA5               	goto	l631
   457     07F9  120A  118A  2800   	ljmp	start
   458     07FC                     __end_of_main:
   459                           
   460                           	psect	text1
   461     0770                     __ptext1:	
   462 ;; *************** function _tx *****************
   463 ;; Defined at:
   464 ;;		line 80 in file "motor1.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;  a               1    wreg     unsigned char 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  a               1    0[COMMON] unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         1       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         1       0       0       0       0
   482 ;;Total ram usage:        1 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491     0770                     _tx:	
   492                           ;psect for function _tx
   493                           
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _tx: [wreg]
   497                           ;tx@a stored from wreg
   498     0770  00F0               	movwf	tx@a
   499     0771                     l621:
   500     0771  0870               	movf	tx@a,w
   501     0772  1283               	bcf	3,5	;RP0=0, select bank0
   502     0773  1303               	bcf	3,6	;RP1=0, select bank0
   503     0774  0099               	movwf	25	;volatile
   504     0775                     l58:
   505     0775  1E0C               	btfss	12,4	;volatile
   506     0776  2F78               	goto	u21
   507     0777  2F79               	goto	u20
   508     0778                     u21:
   509     0778  2F75               	goto	l58
   510     0779                     u20:
   511     0779                     l60:
   512     0779  120C               	bcf	12,4	;volatile
   513     077A                     l61:
   514     077A  0008               	return
   515     077B                     __end_of_tx:
   516                           
   517                           	psect	text2
   518     0767                     __ptext2:	
   519 ;; *************** function _rx *****************
   520 ;; Defined at:
   521 ;;		line 87 in file "motor1.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      unsigned char 
   528 ;; Registers used:
   529 ;;		wreg
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548     0767                     _rx:	
   549                           ;psect for function _rx
   550                           
   551     0767                     l615:	
   552                           ;incstack = 0
   553                           ; Regs used in _rx: [wreg]
   554                           
   555     0767                     l64:
   556     0767  1283               	bcf	3,5	;RP0=0, select bank0
   557     0768  1303               	bcf	3,6	;RP1=0, select bank0
   558     0769  1E8C               	btfss	12,5	;volatile
   559     076A  2F6C               	goto	u11
   560     076B  2F6D               	goto	u10
   561     076C                     u11:
   562     076C  2F67               	goto	l64
   563     076D                     u10:
   564     076D                     l66:
   565     076D  128C               	bcf	12,5	;volatile
   566     076E                     l617:
   567     076E  081A               	movf	26,w	;volatile
   568     076F                     l67:
   569     076F  0008               	return
   570     0770                     __end_of_rx:
   571                           
   572                           	psect	text3
   573     077B                     __ptext3:	
   574 ;; *************** function _init_UART *****************
   575 ;; Defined at:
   576 ;;		line 72 in file "motor1.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603     077B                     _init_UART:	
   604                           ;psect for function _init_UART
   605                           
   606     077B                     l611:	
   607                           ;incstack = 0
   608                           ; Regs used in _init_UART: [wreg]
   609                           
   610                           
   611                           ;motor1.c: 74: {
   612     077B  3024               	movlw	36
   613     077C  1683               	bsf	3,5	;RP0=1, select bank1
   614     077D  1303               	bcf	3,6	;RP1=0, select bank1
   615     077E  0098               	movwf	24	;volatile
   616                           
   617                           ;motor1.c: 75:     while(!RCIF);
   618     077F  3090               	movlw	144
   619     0780  1283               	bcf	3,5	;RP0=0, select bank0
   620     0781  1303               	bcf	3,6	;RP1=0, select bank0
   621     0782  0098               	movwf	24	;volatile
   622                           
   623                           ;motor1.c: 76:     RCIF = 0;
   624     0783  3081               	movlw	129
   625     0784  1683               	bsf	3,5	;RP0=1, select bank1
   626     0785  1303               	bcf	3,6	;RP1=0, select bank1
   627     0786  0099               	movwf	25	;volatile
   628     0787                     l613:
   629                           
   630                           ;motor1.c: 77:     return RCREG;
   631     0787  1283               	bcf	3,5	;RP0=0, select bank0
   632     0788  1303               	bcf	3,6	;RP1=0, select bank0
   633     0789  128C               	bcf	12,5	;volatile
   634     078A  120C               	bcf	12,4	;volatile
   635     078B                     l55:
   636     078B  0008               	return
   637     078C                     __end_of_init_UART:
   638     007E                     btemp	set	126	;btemp
   639     007E                     wtemp0	set	126
   640                           
   641                           	psect	idloc
   642                           
   643                           ;Config register IDLOC0 @ 0x2000
   644                           ;	unspecified, using default values
   645     2000                     	org	8192
   646     2000  3FFF               	dw	16383
   647                           
   648                           ;Config register IDLOC1 @ 0x2001
   649                           ;	unspecified, using default values
   650     2001                     	org	8193
   651     2001  3FFF               	dw	16383
   652                           
   653                           ;Config register IDLOC2 @ 0x2002
   654                           ;	unspecified, using default values
   655     2002                     	org	8194
   656     2002  3FFF               	dw	16383
   657                           
   658                           ;Config register IDLOC3 @ 0x2003
   659                           ;	unspecified, using default values
   660     2003                     	org	8195
   661     2003  3FFF               	dw	16383
   662                           
   663                           	psect	config
   664                           
   665                           ;Config register CONFIG @ 0x2007
   666                           ;	Oscillator Selection bits
   667                           ;	FOSC = HS, HS oscillator
   668                           ;	Watchdog Timer Enable bit
   669                           ;	WDTE = OFF, WDT disabled
   670                           ;	Power-up Timer Enable bit
   671                           ;	PWRTE = ON, PWRT enabled
   672                           ;	FLASH Program Memory Code Protection bits
   673                           ;	CP = OFF, Code protection off
   674                           ;	Brown-out Reset Enable bit
   675                           ;	BOREN = OFF, BOR disabled
   676                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   677                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   678                           ;	Data EE Memory Code Protection
   679                           ;	CPD = OFF, Code Protection off
   680                           ;	FLASH Program Memory Write Enable
   681                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   682                           ;	In-Circuit Debugger Mode bit
   683                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
   684     2007                     	org	8199
   685     2007  3D32               	dw	15666

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     105
                                              1 COMMON     1     1      0
                          _init_UART
                                 _rx
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_UART
   _rx
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Feb 24 21:20:00 2025

                     l60 0779                       l44 07F8                       l61 077A  
                     l55 078B                       l64 0767                       l66 076D  
                     l58 0775                       l67 076F                       u10 076D  
                     u11 076C                       u20 0779                       u21 0778  
                     u30 0796                       u31 0792                       u50 07AB  
                     u51 07AA                       u60 07BD                       u44 0799  
                     u61 07BC                       u70 07CA                       u71 07C9  
                     u80 07D7                       u81 07D6                       u90 07E4  
                     u91 07E3                       _rx 0767                       _tx 0770  
                    l611 077B                      l613 0787                      l621 0771  
                    l615 0767                      l631 07A5                      l623 078C  
                    ?_rx 0070                      l617 076E                      l641 07C4  
                    l633 07AB                      l625 0799                      l651 07E4  
                    l643 07CA                      l635 07B1                      l627 079A  
                    ?_tx 0070                      l653 07EB                      l645 07D1  
                    l637 07B7                      l629 07A0                      l655 07F1  
                    l647 07D7                      l639 07BD                      l649 07DE  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    _RD3 0043                      u100 07F1                      u101 07F0  
                    tx@a 0070                     ??_rx 0070                     ??_tx 0070  
                   _RCIF 0065                     _TXIF 0064                     _main 078C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0071                   _TRISC6 043E  
                 _TRISC7 043F  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __end_of_rx 0770               __end_of_tx 077B               __pmaintext 078C  
                __ptext1 0770                  __ptext2 0767                  __ptext3 077B  
      __end_of_init_UART 078C                  main@get 0071     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                _init_UART 077B  
             ?_init_UART 0070              ??_init_UART 0070  
